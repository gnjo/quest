@xyz //aaa 
[[[
＃ジャンプ命令
マクロは低級言語内で新たな命令を定義する事が出来るが関数の概念はない。
しかし、ジャンプ命令を使って、ループ可能な関数的マクロを作る事が出来る。
ジャンプ命令はグレイターザンを三つ重ねる事でアドレスジャンプを行う。
レスザンを三つ重ねる事で名前を付ける事が出来る。
ループと脱出を例示する。
]]]
$11 0
<<< #1
$11+1
$11=100 #end //escape 
>>> #1 //loop
<<< #end
X00 0 0 0 16 9 f22
TXT [[[count 100 is end]]]
戻り先のアドレスが判らない場合がある。その為にジャンプバック命令がある。ジャンプバックはグレイターザンを三つ重ねるのみである。内部的に呼び出された先に戻る。内部的に呼ばれた場所が存在しない場合、挙動は不明である。ジャンプバックを使う場合は、呼び出し元を気にすると良い。裏画面から表画面へ戻るような場合に多用する。
$11 0
<<< #1
$11+1
$11=100 #end //set the back address 
>>> #1
<<< #end
X00 0 0 0 16 9 f22//bbbb
TXT [[[count 100 is end]]] //aaaa
KEY * //key wait 
//reset
TXT [[[ ]]]
$11 0
$22 http://gnjo.github.io/
//
>>> //jump back 
[[[
abcdefg
hijklmn
opqrstu
]]]
A00 $00
%11=33
%11?1 #aaaa
